# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestSearchProduct:
    def setup_method(self, method):
        chrome_driver_binary = r'.\drivers\chromedriver'
        self.driver = webdriver.Chrome(chrome_driver_binary)
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_search_product_gopro(self):
        self.driver.get("https://gopro.com/en/us/en")
        self.driver.set_window_size(1292, 692)
        self.driver.switch_to.frame(0)
        time.sleep(5)
        self.driver.find_element(By.LINK_TEXT, "Cameras").click()
        time.sleep(7)
        self.driver.switch_to.default_content()
        element = self.driver.find_element(By.LINK_TEXT, "Cameras")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        self.driver.execute_script("window.scrollTo(0,28)")
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".clp_content_clp-main___LY4Y:nth-child(2) .PromotionBox_promotionalMessage__QnQkA").click()
        time.sleep(5)
        self.driver.execute_script("window.scrollTo(0,30)")
        element = self.driver.find_element(By.CSS_SELECTOR, ".Banner_fauxLink__euFyl > .paragraph-xtiny")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(5)
        product = self.driver.find_element(By.CSS_SELECTOR,
                                           "#__next > div:nth-child(4) > div:nth-child(2) > div.clp_content_baner-content__e3uHf.row > div.clp_content_productInfo__w_RkB.col-xsmall-4.col-small-8.col-medium-12.col-large-5.col-xlarge-5.clp_content_reverse-padding__4UF_x > div.clp_content_content-information-text__6X2_x > div.SkeletonLoader_contentContainer__3bPyJ.clp_content_clp-content-promotional-box__nsc1O.SkeletonLoader_contentLoaded__iFPjO > div > div.PromotionBox_promotionBox__Dl1Hs > div.PromotionBox_promotionalMessageBox__hnBaw > div").text
        self.driver.find_element(By.CSS_SELECTOR, ".CategoryMenu_ico__1mvB9 > .icon-product-search").click()
        time.sleep(5)
        self.driver.find_element(By.ID, "search-box").send_keys("HERO10")
        time.sleep(5)
        self.driver.find_element(By.ID, "search-box").send_keys(Keys.ENTER)
        time.sleep(5)
        element = self.driver.find_element(By.CSS_SELECTOR, ".CategoryMenu_ico__1mvB9 > .icon-product-search")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        # actions.move_to_element(element, 0, 0).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".Ratings_starLarge__CfnzO:nth-child(6) > svg")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        time.sleep(5)
        searched_product = self.driver.find_element(By.CSS_SELECTOR,
                                                    "#__next > div:nth-child(4) > div > div.BuyModule_buyModuleWrapper__PuJLk > div > div:nth-child(6) > div > div > p.paragraph-tiny.PriceModule_promoDetails__NTKCC").text
        time.sleep(5)
        assert product == searched_product
